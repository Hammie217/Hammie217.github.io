library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

--  Uncomment the following lines to use the declarations that are
--  provided for instantiating Xilinx primitive components.
--library UNISIM;
--use UNISIM.VComponents.all;

entity ExampleRegProcedure is
	Port( clk, rst, load : in std_logic;
			D : in std_logic_vector(31 downto 0);
			Q : out std_logic_vector(31 downto 0));
end ExampleRegProcedure;

architecture Behavioral of ExampleRegProcedure is

	-- It is the "procedure" below which is the example
	-- This can be included in a PACKAGE of your own to avoid declaring it within each architecture

	procedure MyRegister( signal D : in std_logic_vector;
								 signal Q : out std_logic_vector;
								 signal clk, rst, load: in std_logic) is
	begin
		 	if rst = '1' then
					Q <= (Q'range => '0');	-- asynchronous reset to fill with zeros
			elsif rising_edge(clk) then
					if load = '1' then
						Q <= D;
					end if;
			end if;
	end procedure;




begin

   -- Example of instantiating the register
	the_reg: MyRegister(D,Q,clk,rst,load);

end Behavioral;
