-- This example starts with the add-with-carry module from the coding examples

LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.numeric_std.ALL;

-- Must add the following library for conversion functions
use ieee.std_logic_arith.ALL;

ENTITY addwithcarry_tb_seq_vhd_tb IS
END addwithcarry_tb_seq_vhd_tb;

ARCHITECTURE behavior OF addwithcarry_tb_seq_vhd_tb IS 

	-- define a delay longer than the critical path through the uut
	-- NOTE: this makes little difference for behavioral simulation
	-- however as an EXERCISE try putting in sucessively smaller times
	-- to say 100 ps and running post place and route modelling.
	-- What happens?
	constant DELAY : time := 20 ns;
	
	-- Define length of adder in bits
	constant NB : integer := 8;

	COMPONENT addwithcarry	
	GENERIC ( N : integer := NB );
	PORT(
		A,B : IN std_logic_vector(NB-1 downto 0);		
		CarryIn : IN std_logic;          
		Sum : OUT std_logic_vector(NB-1 downto 0);
		CarryOut : OUT std_logic
		);
	END COMPONENT;

	SIGNAL A,B :  std_logic_vector(NB-1 downto 0);	
	SIGNAL CarryIn :  std_logic;
	SIGNAL Sum :  std_logic_vector(NB-1 downto 0);
	SIGNAL CarryOut :  std_logic;

	-- definition of a function to convert from integer to std_logic

	function conv_std_logic ( int_arg : integer ) return std_logic is	
	begin
		if int_arg = 1 then
			return '1';
		elsif int_arg = 0 then
			return '0';
		else
			assert(false) report "ERROR, CONV_STD_LOGIC expected 0 or 1" severity warning;
			return 'X';
		end if;	
	end function;	



BEGIN

	uut: addwithcarry	 PORT MAP(
		A => A,
		B => B,
		CarryIn => CarryIn,
		Sum => Sum,
		CarryOut => CarryOut
	);


-- *** Test Bench - User Defined Section ***
   tb : PROCESS
   BEGIN

		for tv_a in 0 to 2**NB-1 loop
			A <= conv_std_logic_vector(tv_a,NB);		
			for tv_b in 0 to 2**NB-1 loop
				B <= conv_std_logic_vector(tv_b,NB);
				for tv_cin in 0 to 1 loop
					CarryIn <= conv_std_logic(tv_cin);
					wait for DELAY;

					-- EXERCISE: add checking the results are correct here???

				end loop;
			end loop;
		end loop;

      wait; -- will wait forever
   END PROCESS;
-- *** End Test Bench - User Defined Section ***

END;