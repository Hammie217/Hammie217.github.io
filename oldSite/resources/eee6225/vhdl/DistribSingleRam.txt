library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;


entity DistribRamSinglePort is

   Generic ( N : integer := 8 ); -- Datapath width	 

   Port ( clk, we : in std_logic;
          addr : in  std_logic_vector(  7 downto 0);
          din  : in  std_logic_vector(N-1 downto 0);
          dout : out std_logic_vector(N-1 downto 0)  );

end DistribRamSinglePort;



architecture Behavioral of DistribRamSinglePort is

   constant N_elements : positive := 2**(addr'length);
	
   type RAM_type is array (0 to N_elements-1) of std_logic_vector(N-1 downto 0);
	
   signal RAM : RAM_type;

begin

   process (clk) begin
      if rising_edge(clk) then
	 if we='1' then
	    RAM(conv_integer(addr)) <= din;   -- write data
         end if;
      end if;
   end process;

   dout <= RAM(conv_integer(addr));   -- read data

end Behavioral;
